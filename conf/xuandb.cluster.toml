# NOTE: Inline comment after a configuration item lists its possible values,
#       and '*' marks the default value.

# `cluster-name` is the name of the cluster, it is used to verify the node join
# requests, only the nodes with the same cluster name can join the cluster. The
# default value is an empty string.
cluster-name = ""

# `node` is the node configuration, more than one `node` can be defined with
# different `id` to provide configurations for different nodes.
[[node]]
	# `id` is the id of the node, each node should have a unique `id`.
	#
	# Here, "#default#" is a special `id` which means this is the the default
	# node. the default node is not a real node, but provides default values for
	# other nodes. Note that configurations like 'http-addr' must be unique for
	# each node, so they are ignored even if they are specified here.
	#
	# The default node is optional, if not defined, or if any configuraion item
	# is missing, the build-in default is used.
	id = "#default#"

	# `http-addr` is the address for the HTTP service, its format is
	# "host:port". This configuration must be specified at the concrete nodes,
	# the value specified at the default node will be ignored.
	http-addr = ""

	# `enable-pprof` controls whether to enable the pprof service. The pprof
	# service is used for debugging and performance tuning, it is not
	# recommended to enable it in production environment.
	enable-pprof = false      # *false | true

	# `node.logger` is the logger configurations.
	[node.logger]
		# `level` is the minimal log level to emit.
		level = "DEBUG"		  # DEBUG | *INFO | WARN | ERROR
		# `format` is the format of the log records.
		format = "text"       # text | *json
		# `add-source` controls whether to add source code position to the log
		# records.
		add-source = false    # *false | true
		# `output-to` controls where to write the log records.
		output-to = "stderr"  # *stderr | stdout | discard | {path of a directory}

	# `node.meta' is the configurations for the meta service.
	[node.meta]
		# `raft-voter` specifies whether this node is a voter in the raft
		# cluster or not. Both voter and non-voter nodes provide a local cache
		# of the meta data, but voter nodes also participate in raft elections
		# and log entry commitment, while non-voter nodes don't.
		raft-voter = false    # *false | true

		# `raft-addr` is the address for the raft internal communication, its
		# format is "host:port". This configuration must be specified at the
		# concrete nodes, the value specified at the default node will be
		# ignored.
		raft-addr = ""

		# `raft-store` is the storage type for raft log store and stable store.
		# Voter nodes should use "boltdb" in production environment. Non-voter
		# nodes ignores this configuration and always uses "memory".
		raft-store = "memory" # memory | *boltdb

		# `raft-snapshot-store` is the storage type for raft snapshot store.
		# Voter nodes should use "file" in production environment. Non-voter
		# nodes ignores this configuration and always uses "discard".
		raft-snapshot-store = "memory"	# discard | memory | *file

		# `data-dir` is the directory to store meta data, like raft log and
		# snapshot. If some of the nodes run on a same host, then these nodes
		# should have a different `data-dir`, or there will be undefined
		# runtime errors. For nodes running on different hosts, using a same
		# `data-dir` could be a good choice to simplify the deployment.
		data-dir = ""

	# `node.data' is the configurations for the data service.
	[node.data]

	# `node.query' is the configurations for the query service.
	[node.query]

# `node` with `id` other than "#default#" are configurations for the real nodes.
[[node]]
	# `id` and `http-addr` are required for each node.
	id = "1"
	http-addr = "127.0.0.1:7001"

	# `node.meta` is required for each node because `node.meta.raft-addr` does.
	[node.meta]
		raft-voter = true
		raft-addr = "127.0.0.1:8001"
		data-dir = "meta/1"

	# `node.data' is optional, the node will not start the data service if it
	# is omitted.
	[node.data]

	# `node.query' is optional, the node will not start the query service if it
	# is omitted.
	[node.query]


[[node]]
	id = "2"
	http-addr = "127.0.0.1:7002"

	[node.meta]
		raft-voter = true
		raft-addr = "127.0.0.1:8002"
		data-dir = "meta/2"

	[node.data]

	[node.query]


[[node]]
	id = "3"
	http-addr = "127.0.0.1:7003"

	[node.meta]
		raft-voter = true
		raft-addr = "127.0.0.1:8003"
		data-dir = "meta/3"

	[node.data]

	[node.query]
